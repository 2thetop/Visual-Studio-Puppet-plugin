// This code was generated by the Managed Package Parser Generator


using System;
using System.Collections.Generic;
using System.Text;
using Puppet.ParserGenerator;
using Microsoft.VisualStudio.TextManager.Interop;
using System.Diagnostics;

namespace Puppet.Parser
{
public enum Tokens {
    error=1,EOF=2,STRING=3,DQPRE=4,DQMID=5,DQPOST=6,LBRACK=7,RBRACK=8,
    LBRACE=9,RBRACE=10,SYMBOL=11,FARROW=12,COMMA=13,TRUE=14,FALSE=15,EQUALS=16,
    APPENDS=17,DELETES=18,LESSEQUAL=19,NOTEQUAL=20,DOT=21,COLON=22,LLCOLLECT=23,RRCOLLECT=24,
    QMARK=25,LPAREN=26,RPAREN=27,ISEQUAL=28,GREATEREQUAL=29,GREATERTHAN=30,LESSTHAN=31,IF=32,
    ELSE=33,DEFINE=34,ELSIF=35,VARIABLE=36,CLASS=37,INHERITS=38,NODE=39,BOOLEAN=40,
    NAME=41,SEMIC=42,CASE=43,DEFAULT=44,AT=45,ATAT=46,LCOLLECT=47,RCOLLECT=48,
    CLASSREF=49,NOT=50,OR=51,AND=52,UNDEF=53,PARROW=54,PLUS=55,MINUS=56,
    TIMES=57,DIV=58,LSHIFT=59,RSHIFT=60,UMINUS=61,MATCH=62,NOMATCH=63,REGEX=64,
    IN_EDGE=65,OUT_EDGE=66,IN_EDGE_SUB=67,OUT_EDGE_SUB=68,IN=69,UNLESS=70,PIPE=71,LAMBDA=72,
    SELBRACE=73,NUMBER=74,TILDE=75,MODULO=76,HIGH=77,CALL=78,LISTSTART=79,TITLE_COLON=80,
    CASE_COLON=81,LOW=82,maxParseToken=83,LEX_WHITE=84,LN_COMMENT=85,BL_COMMENT=86,LEX_ERROR=87};

public partial struct LexValue
#line 10 "Generated\parser.y"
			{
    public string str;
}
// Abstract base class for MPLEX scanners
public abstract class ScanBase : AScanner<LexValue,LexLocation> {
    protected abstract int CurrentSc { get; set; }
    //
    // Override the virtual EolState property if the scanner state is more
    // complicated then a simple copy of the current start state ordinal
    //
    public virtual int EolState { get { return CurrentSc; } set { CurrentSc = value; } }
}

public partial class Parser: ShiftReduceParser<LexValue, LexLocation>
{
#line 15 "Generated\parser.y"

    ErrorHandler handler = null;

    public void SetHandler(ErrorHandler hdlr) 
    { 
        handler = hdlr; 
    }

    internal void CallHdlr(string msg, LexLocation val)
    {
        handler.AddError(msg, val.sLin, val.sCol, val.eCol - val.sCol);
    }

    internal TextSpan MkTSpan(LexLocation s) 
    { 
        return TextSpan(s.sLin, s.sCol, s.eLin, s.eCol); 
    }

    internal void Match(LexLocation lh, LexLocation rh) 
    {
        DefineMatch(MkTSpan(lh), MkTSpan(rh)); 
    }
    
     public void dbgout(string s, params object[] a)
    {
        Debug.WriteLine("Dbg: " + string.Format(s, a));
    }

  protected override void Initialize()
  {
    this.errToken = (int)Tokens.error;
    this.eofToken = (int)Tokens.EOF;

    states=new State[374];
    AddState(0,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-1,1,-3,3,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(1,new State(new int[]{2,2}));
    AddState(2,new State(-1));
    AddState(3,new State(-2));
    AddState(4,new State(new int[]{42,5,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311,2,-3,10,-3},new int[]{-5,373,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(5,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-5,6,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(6,new State(new int[]{13,7,42,-5,7,-5,40,-5,44,-5,9,-5,64,-5,41,-5,3,-5,4,-5,74,-5,49,-5,53,-5,36,-5,56,-5,50,-5,26,-5,43,-5,32,-5,70,-5,34,-5,37,-5,39,-5,45,-5,46,-5,2,-5,10,-5}));
    AddState(7,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-6,8,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(8,new State(-8));
    AddState(9,new State(new int[]{65,10,67,12,66,14,68,16,13,-9,42,-9,7,-9,40,-9,44,-9,9,-9,64,-9,41,-9,3,-9,4,-9,74,-9,49,-9,53,-9,36,-9,56,-9,50,-9,26,-9,43,-9,32,-9,70,-9,34,-9,37,-9,39,-9,45,-9,46,-9,2,-9,10,-9}));
    AddState(10,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-7,11,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(11,new State(-11));
    AddState(12,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-7,13,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(13,new State(-12));
    AddState(14,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-7,15,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(15,new State(-13));
    AddState(16,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-7,17,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(17,new State(-14));
    AddState(18,new State(-10));
    AddState(19,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,9,366,47,85,23,90,65,-106,67,-106,66,-106,68,-106,13,-106,42,-106,40,-106,44,-106,64,-106,41,-106,3,-106,4,-106,74,-106,49,-106,53,-106,36,-106,50,-106,26,-106,43,-106,32,-106,70,-106,34,-106,37,-106,39,-106,45,-106,46,-106,2,-106,10,-106},new int[]{-57,75}));
    AddState(20,new State(new int[]{41,21}));
    AddState(21,new State(-76));
    AddState(22,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-11,23,-9,179,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(23,new State(new int[]{8,24,13,25}));
    AddState(24,new State(-16));
    AddState(25,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,26,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(26,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,8,-43,13,-43,27,-43,1,-43,22,-43},new int[]{-57,75}));
    AddState(27,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,28,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(28,new State(new int[]{21,-17,7,-17,69,-17,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-17,47,-17,23,-17,9,-17,65,-17,67,-17,66,-17,68,-17,13,-17,42,-17,40,-17,44,-17,64,-17,41,-17,3,-17,4,-17,74,-17,49,-17,53,-17,36,-17,50,-17,26,-17,43,-17,32,-17,70,-17,34,-17,37,-17,39,-17,45,-17,46,-17,2,-17,10,-17,8,-17,27,-17,22,-17,12,-17,48,-17,24,-17,1,-17,6,-17,5,-17,71,-17},new int[]{-57,75}));
    AddState(29,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,30,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(30,new State(new int[]{21,-18,7,-18,69,-18,62,-18,63,-18,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-18,47,-18,23,-18,9,-18,65,-18,67,-18,66,-18,68,-18,13,-18,42,-18,40,-18,44,-18,64,-18,41,-18,3,-18,4,-18,74,-18,49,-18,53,-18,36,-18,50,-18,26,-18,43,-18,32,-18,70,-18,34,-18,37,-18,39,-18,45,-18,46,-18,2,-18,10,-18,8,-18,27,-18,22,-18,12,-18,48,-18,24,-18,1,-18,6,-18,5,-18,71,-18},new int[]{-57,75}));
    AddState(31,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,32,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(32,new State(new int[]{21,-19,7,-19,69,-19,62,-19,63,-19,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-19,47,-19,23,-19,9,-19,65,-19,67,-19,66,-19,68,-19,13,-19,42,-19,40,-19,44,-19,64,-19,41,-19,3,-19,4,-19,74,-19,49,-19,53,-19,36,-19,50,-19,26,-19,43,-19,32,-19,70,-19,34,-19,37,-19,39,-19,45,-19,46,-19,2,-19,10,-19,8,-19,27,-19,22,-19,12,-19,48,-19,24,-19,1,-19,6,-19,5,-19,71,-19},new int[]{-57,75}));
    AddState(33,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,34,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(34,new State(new int[]{21,-20,7,-20,69,-20,62,-20,63,-20,55,-20,56,-20,58,-20,57,-20,76,-20,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-20,47,-20,23,-20,9,-20,65,-20,67,-20,66,-20,68,-20,13,-20,42,-20,40,-20,44,-20,64,-20,41,-20,3,-20,4,-20,74,-20,49,-20,53,-20,36,-20,50,-20,26,-20,43,-20,32,-20,70,-20,34,-20,37,-20,39,-20,45,-20,46,-20,2,-20,10,-20,8,-20,27,-20,22,-20,12,-20,48,-20,24,-20,1,-20,6,-20,5,-20,71,-20},new int[]{-57,75}));
    AddState(35,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,36,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(36,new State(new int[]{21,-21,7,-21,69,-21,62,-21,63,-21,55,-21,56,-21,58,-21,57,-21,76,-21,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-21,47,-21,23,-21,9,-21,65,-21,67,-21,66,-21,68,-21,13,-21,42,-21,40,-21,44,-21,64,-21,41,-21,3,-21,4,-21,74,-21,49,-21,53,-21,36,-21,50,-21,26,-21,43,-21,32,-21,70,-21,34,-21,37,-21,39,-21,45,-21,46,-21,2,-21,10,-21,8,-21,27,-21,22,-21,12,-21,48,-21,24,-21,1,-21,6,-21,5,-21,71,-21},new int[]{-57,75}));
    AddState(37,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,38,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(38,new State(new int[]{21,-22,7,-22,69,-22,62,-22,63,-22,55,33,56,35,58,-22,57,-22,76,-22,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-22,47,-22,23,-22,9,-22,65,-22,67,-22,66,-22,68,-22,13,-22,42,-22,40,-22,44,-22,64,-22,41,-22,3,-22,4,-22,74,-22,49,-22,53,-22,36,-22,50,-22,26,-22,43,-22,32,-22,70,-22,34,-22,37,-22,39,-22,45,-22,46,-22,2,-22,10,-22,8,-22,27,-22,22,-22,12,-22,48,-22,24,-22,1,-22,6,-22,5,-22,71,-22},new int[]{-57,75}));
    AddState(39,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,40,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(40,new State(new int[]{21,-23,7,-23,69,-23,62,-23,63,-23,55,33,56,35,58,-23,57,-23,76,-23,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-23,47,-23,23,-23,9,-23,65,-23,67,-23,66,-23,68,-23,13,-23,42,-23,40,-23,44,-23,64,-23,41,-23,3,-23,4,-23,74,-23,49,-23,53,-23,36,-23,50,-23,26,-23,43,-23,32,-23,70,-23,34,-23,37,-23,39,-23,45,-23,46,-23,2,-23,10,-23,8,-23,27,-23,22,-23,12,-23,48,-23,24,-23,1,-23,6,-23,5,-23,71,-23},new int[]{-57,75}));
    AddState(41,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,42,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(42,new State(new int[]{21,-24,7,-24,69,-24,62,-24,63,-24,55,33,56,35,58,-24,57,-24,76,-24,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-24,47,-24,23,-24,9,-24,65,-24,67,-24,66,-24,68,-24,13,-24,42,-24,40,-24,44,-24,64,-24,41,-24,3,-24,4,-24,74,-24,49,-24,53,-24,36,-24,50,-24,26,-24,43,-24,32,-24,70,-24,34,-24,37,-24,39,-24,45,-24,46,-24,2,-24,10,-24,8,-24,27,-24,22,-24,12,-24,48,-24,24,-24,1,-24,6,-24,5,-24,71,-24},new int[]{-57,75}));
    AddState(43,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,44,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(44,new State(new int[]{21,-25,7,-25,69,-25,62,-25,63,-25,55,-25,56,-25,58,-25,57,-25,76,-25,59,-25,60,-25,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-25,47,-25,23,-25,9,-25,65,-25,67,-25,66,-25,68,-25,13,-25,42,-25,40,-25,44,-25,64,-25,41,-25,3,-25,4,-25,74,-25,49,-25,53,-25,36,-25,50,-25,26,-25,43,-25,32,-25,70,-25,34,-25,37,-25,39,-25,45,-25,46,-25,2,-25,10,-25,8,-25,27,-25,22,-25,12,-25,48,-25,24,-25,1,-25,6,-25,5,-25,71,-25},new int[]{-57,75}));
    AddState(45,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,46,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(46,new State(new int[]{21,-26,7,-26,69,-26,62,-26,63,-26,55,-26,56,-26,58,-26,57,-26,76,-26,59,-26,60,-26,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-26,47,-26,23,-26,9,-26,65,-26,67,-26,66,-26,68,-26,13,-26,42,-26,40,-26,44,-26,64,-26,41,-26,3,-26,4,-26,74,-26,49,-26,53,-26,36,-26,50,-26,26,-26,43,-26,32,-26,70,-26,34,-26,37,-26,39,-26,45,-26,46,-26,2,-26,10,-26,8,-26,27,-26,22,-26,12,-26,48,-26,24,-26,1,-26,6,-26,5,-26,71,-26},new int[]{-57,75}));
    AddState(47,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,48,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(48,new State(new int[]{21,-28,7,-28,69,-28,62,-28,63,-28,55,-28,56,-28,58,-28,57,-28,76,-28,59,-28,60,-28,20,-28,28,-28,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-28,47,-28,23,-28,9,-28,65,-28,67,-28,66,-28,68,-28,13,-28,42,-28,40,-28,44,-28,64,-28,41,-28,3,-28,4,-28,74,-28,49,-28,53,-28,36,-28,50,-28,26,-28,43,-28,32,-28,70,-28,34,-28,37,-28,39,-28,45,-28,46,-28,2,-28,10,-28,8,-28,27,-28,22,-28,12,-28,48,-28,24,-28,1,-28,6,-28,5,-28,71,-28},new int[]{-57,75}));
    AddState(49,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,50,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(50,new State(new int[]{21,-29,7,-29,69,-29,62,-29,63,-29,55,-29,56,-29,58,-29,57,-29,76,-29,59,-29,60,-29,20,-29,28,-29,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-29,47,-29,23,-29,9,-29,65,-29,67,-29,66,-29,68,-29,13,-29,42,-29,40,-29,44,-29,64,-29,41,-29,3,-29,4,-29,74,-29,49,-29,53,-29,36,-29,50,-29,26,-29,43,-29,32,-29,70,-29,34,-29,37,-29,39,-29,45,-29,46,-29,2,-29,10,-29,8,-29,27,-29,22,-29,12,-29,48,-29,24,-29,1,-29,6,-29,5,-29,71,-29},new int[]{-57,75}));
    AddState(51,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,52,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(52,new State(new int[]{21,-30,7,-30,69,-30,62,-30,63,-30,55,-30,56,-30,58,-30,57,-30,76,-30,59,-30,60,-30,20,-30,28,-30,30,-30,29,-30,31,-30,19,-30,52,59,51,61,16,63,17,65,18,67,25,-30,47,-30,23,-30,9,-30,65,-30,67,-30,66,-30,68,-30,13,-30,42,-30,40,-30,44,-30,64,-30,41,-30,3,-30,4,-30,74,-30,49,-30,53,-30,36,-30,50,-30,26,-30,43,-30,32,-30,70,-30,34,-30,37,-30,39,-30,45,-30,46,-30,2,-30,10,-30,8,-30,27,-30,22,-30,12,-30,48,-30,24,-30,1,-30,6,-30,5,-30,71,-30},new int[]{-57,75}));
    AddState(53,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,54,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(54,new State(new int[]{21,-31,7,-31,69,-31,62,-31,63,-31,55,-31,56,-31,58,-31,57,-31,76,-31,59,-31,60,-31,20,-31,28,-31,30,-31,29,-31,31,-31,19,-31,52,59,51,61,16,63,17,65,18,67,25,-31,47,-31,23,-31,9,-31,65,-31,67,-31,66,-31,68,-31,13,-31,42,-31,40,-31,44,-31,64,-31,41,-31,3,-31,4,-31,74,-31,49,-31,53,-31,36,-31,50,-31,26,-31,43,-31,32,-31,70,-31,34,-31,37,-31,39,-31,45,-31,46,-31,2,-31,10,-31,8,-31,27,-31,22,-31,12,-31,48,-31,24,-31,1,-31,6,-31,5,-31,71,-31},new int[]{-57,75}));
    AddState(55,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,56,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(56,new State(new int[]{21,-32,7,-32,69,-32,62,-32,63,-32,55,-32,56,-32,58,-32,57,-32,76,-32,59,-32,60,-32,20,-32,28,-32,30,-32,29,-32,31,-32,19,-32,52,59,51,61,16,63,17,65,18,67,25,-32,47,-32,23,-32,9,-32,65,-32,67,-32,66,-32,68,-32,13,-32,42,-32,40,-32,44,-32,64,-32,41,-32,3,-32,4,-32,74,-32,49,-32,53,-32,36,-32,50,-32,26,-32,43,-32,32,-32,70,-32,34,-32,37,-32,39,-32,45,-32,46,-32,2,-32,10,-32,8,-32,27,-32,22,-32,12,-32,48,-32,24,-32,1,-32,6,-32,5,-32,71,-32},new int[]{-57,75}));
    AddState(57,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,58,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(58,new State(new int[]{21,-33,7,-33,69,-33,62,-33,63,-33,55,-33,56,-33,58,-33,57,-33,76,-33,59,-33,60,-33,20,-33,28,-33,30,-33,29,-33,31,-33,19,-33,52,59,51,61,16,63,17,65,18,67,25,-33,47,-33,23,-33,9,-33,65,-33,67,-33,66,-33,68,-33,13,-33,42,-33,40,-33,44,-33,64,-33,41,-33,3,-33,4,-33,74,-33,49,-33,53,-33,36,-33,50,-33,26,-33,43,-33,32,-33,70,-33,34,-33,37,-33,39,-33,45,-33,46,-33,2,-33,10,-33,8,-33,27,-33,22,-33,12,-33,48,-33,24,-33,1,-33,6,-33,5,-33,71,-33},new int[]{-57,75}));
    AddState(59,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,60,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(60,new State(new int[]{21,-35,7,-35,69,-35,62,-35,63,-35,55,-35,56,-35,58,-35,57,-35,76,-35,59,-35,60,-35,20,-35,28,-35,30,-35,29,-35,31,-35,19,-35,52,-35,51,61,16,63,17,65,18,67,25,-35,47,-35,23,-35,9,-35,65,-35,67,-35,66,-35,68,-35,13,-35,42,-35,40,-35,44,-35,64,-35,41,-35,3,-35,4,-35,74,-35,49,-35,53,-35,36,-35,50,-35,26,-35,43,-35,32,-35,70,-35,34,-35,37,-35,39,-35,45,-35,46,-35,2,-35,10,-35,8,-35,27,-35,22,-35,12,-35,48,-35,24,-35,1,-35,6,-35,5,-35,71,-35},new int[]{-57,75}));
    AddState(61,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,62,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(62,new State(new int[]{21,-36,7,-36,69,-36,62,-36,63,-36,55,-36,56,-36,58,-36,57,-36,76,-36,59,-36,60,-36,20,-36,28,-36,30,-36,29,-36,31,-36,19,-36,52,-36,51,-36,16,63,17,65,18,67,25,-36,47,-36,23,-36,9,-36,65,-36,67,-36,66,-36,68,-36,13,-36,42,-36,40,-36,44,-36,64,-36,41,-36,3,-36,4,-36,74,-36,49,-36,53,-36,36,-36,50,-36,26,-36,43,-36,32,-36,70,-36,34,-36,37,-36,39,-36,45,-36,46,-36,2,-36,10,-36,8,-36,27,-36,22,-36,12,-36,48,-36,24,-36,1,-36,6,-36,5,-36,71,-36},new int[]{-57,75}));
    AddState(63,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,64,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(64,new State(new int[]{21,-37,7,-37,69,-37,62,-37,63,-37,55,-37,56,-37,58,-37,57,-37,76,-37,59,-37,60,-37,20,-37,28,-37,30,-37,29,-37,31,-37,19,-37,52,-37,51,-37,16,63,17,65,18,67,25,-37,47,-37,23,-37,9,-37,65,-37,67,-37,66,-37,68,-37,13,-37,42,-37,40,-37,44,-37,64,-37,41,-37,3,-37,4,-37,74,-37,49,-37,53,-37,36,-37,50,-37,26,-37,43,-37,32,-37,70,-37,34,-37,37,-37,39,-37,45,-37,46,-37,2,-37,10,-37,8,-37,27,-37,22,-37,12,-37,48,-37,24,-37,1,-37,6,-37,5,-37,71,-37},new int[]{-57,75}));
    AddState(65,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,66,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(66,new State(new int[]{21,-38,7,-38,69,-38,62,-38,63,-38,55,-38,56,-38,58,-38,57,-38,76,-38,59,-38,60,-38,20,-38,28,-38,30,-38,29,-38,31,-38,19,-38,52,-38,51,-38,16,63,17,65,18,67,25,-38,47,-38,23,-38,9,-38,65,-38,67,-38,66,-38,68,-38,13,-38,42,-38,40,-38,44,-38,64,-38,41,-38,3,-38,4,-38,74,-38,49,-38,53,-38,36,-38,50,-38,26,-38,43,-38,32,-38,70,-38,34,-38,37,-38,39,-38,45,-38,46,-38,2,-38,10,-38,8,-38,27,-38,22,-38,12,-38,48,-38,24,-38,1,-38,6,-38,5,-38,71,-38},new int[]{-57,75}));
    AddState(67,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,68,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(68,new State(new int[]{21,-39,7,-39,69,-39,62,-39,63,-39,55,-39,56,-39,58,-39,57,-39,76,-39,59,-39,60,-39,20,-39,28,-39,30,-39,29,-39,31,-39,19,-39,52,-39,51,-39,16,63,17,65,18,67,25,-39,47,-39,23,-39,9,-39,65,-39,67,-39,66,-39,68,-39,13,-39,42,-39,40,-39,44,-39,64,-39,41,-39,3,-39,4,-39,74,-39,49,-39,53,-39,36,-39,50,-39,26,-39,43,-39,32,-39,70,-39,34,-39,37,-39,39,-39,45,-39,46,-39,2,-39,10,-39,8,-39,27,-39,22,-39,12,-39,48,-39,24,-39,1,-39,6,-39,5,-39,71,-39},new int[]{-57,75}));
    AddState(69,new State(new int[]{7,111,40,119,44,121,9,356,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-12,70,-49,71,-9,72,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(70,new State(-40));
    AddState(71,new State(-100));
    AddState(72,new State(new int[]{12,73,21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90},new int[]{-57,75}));
    AddState(73,new State(new int[]{1,355,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,74,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(74,new State(-104,new int[]{-57,75}));
    AddState(75,new State(new int[]{9,76,26,-121,21,-121,7,-121,69,-121,62,-121,63,-121,55,-121,56,-121,58,-121,57,-121,76,-121,59,-121,60,-121,20,-121,28,-121,30,-121,29,-121,31,-121,19,-121,52,-121,51,-121,16,-121,17,-121,18,-121,25,-121,47,-121,23,-121,65,-121,67,-121,66,-121,68,-121,13,-121,42,-121,40,-121,44,-121,64,-121,41,-121,3,-121,4,-121,74,-121,49,-121,53,-121,36,-121,50,-121,43,-121,32,-121,70,-121,34,-121,37,-121,39,-121,45,-121,46,-121,2,-121,10,-121,8,-121,27,-121,22,-121,12,-121,48,-121,24,-121,1,-121,6,-121,5,-121,71,-121}));
    AddState(76,new State(new int[]{41,260,52,262,43,263,37,264,44,265,34,266,33,267,35,268,32,269,69,270,38,271,39,272,51,273,53,274,70,275,40,276,13,-126,10,-126},new int[]{-54,77,-60,259,-61,82,-62,261}));
    AddState(77,new State(new int[]{13,80,10,-198},new int[]{-36,78}));
    AddState(78,new State(new int[]{10,79}));
    AddState(79,new State(-120));
    AddState(80,new State(new int[]{41,260,52,262,43,263,37,264,44,265,34,266,33,267,35,268,32,269,69,270,38,271,39,272,51,273,53,274,70,275,40,276,10,-199,42,-199},new int[]{-60,81,-61,82,-62,261}));
    AddState(81,new State(-128));
    AddState(82,new State(new int[]{12,83,54,353}));
    AddState(83,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,84,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(84,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,13,-132,10,-132,42,-132},new int[]{-57,75}));
    AddState(85,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240,48,-216},new int[]{-58,86,-59,88,-9,89,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(86,new State(new int[]{48,87}));
    AddState(87,new State(-122));
    AddState(88,new State(-124));
    AddState(89,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,48,-125,24,-125},new int[]{-57,75}));
    AddState(90,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240,24,-216},new int[]{-58,91,-59,88,-9,89,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(91,new State(new int[]{24,92}));
    AddState(92,new State(-123));
    AddState(93,new State(-15));
    AddState(94,new State(-44));
    AddState(95,new State(new int[]{26,96,21,-70,7,-70,69,-70,62,-70,63,-70,55,-70,56,-70,58,-70,57,-70,76,-70,59,-70,60,-70,20,-70,28,-70,30,-70,29,-70,31,-70,19,-70,52,-70,51,-70,16,-70,17,-70,18,-70,25,-70,9,-70,47,-70,23,-70,65,-70,67,-70,66,-70,68,-70,13,-70,42,-70,40,-70,44,-70,64,-70,41,-70,3,-70,4,-70,74,-70,49,-70,53,-70,36,-70,50,-70,43,-70,32,-70,70,-70,34,-70,37,-70,39,-70,45,-70,46,-70,2,-70,10,-70,8,-70,27,-70,22,-70,12,-70,48,-70,24,-70,1,-70,6,-70,5,-70,71,-70}));
    AddState(96,new State(new int[]{27,351,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-11,97,-9,179,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(97,new State(new int[]{13,350,27,-198},new int[]{-36,98}));
    AddState(98,new State(new int[]{27,99}));
    AddState(99,new State(-66,new int[]{-37,100,-40,101}));
    AddState(100,new State(-68));
    AddState(101,new State(new int[]{9,103},new int[]{-41,102}));
    AddState(102,new State(-77));
    AddState(103,new State(new int[]{10,106,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-3,104,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(104,new State(new int[]{10,105}));
    AddState(105,new State(-78));
    AddState(106,new State(-79));
    AddState(107,new State(new int[]{13,7,42,-4,7,-4,40,-4,44,-4,9,-4,64,-4,41,-4,3,-4,4,-4,74,-4,49,-4,53,-4,36,-4,56,-4,50,-4,26,-4,43,-4,32,-4,70,-4,34,-4,37,-4,39,-4,45,-4,46,-4,2,-4,10,-4}));
    AddState(108,new State(-7));
    AddState(109,new State(-45));
    AddState(110,new State(-55));
    AddState(111,new State(new int[]{8,348,1,349,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-11,112,-9,179,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(112,new State(new int[]{8,113,1,114,13,115}));
    AddState(113,new State(-165));
    AddState(114,new State(-166));
    AddState(115,new State(new int[]{8,116,1,117,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,26,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(116,new State(-167));
    AddState(117,new State(-168));
    AddState(118,new State(-56));
    AddState(119,new State(-196));
    AddState(120,new State(-57));
    AddState(121,new State(-195));
    AddState(122,new State(-58));
    AddState(123,new State(new int[]{10,346,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-74,124,-75,347,-9,131,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(124,new State(new int[]{10,125,1,126,13,127}));
    AddState(125,new State(-171));
    AddState(126,new State(-172));
    AddState(127,new State(new int[]{10,128,1,129,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-75,130,-9,131,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(128,new State(-173));
    AddState(129,new State(-174));
    AddState(130,new State(-178));
    AddState(131,new State(new int[]{12,132,21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90},new int[]{-57,75}));
    AddState(132,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,133,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(133,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,10,-179,1,-179,13,-179},new int[]{-57,75}));
    AddState(134,new State(-59));
    AddState(135,new State(-197));
    AddState(136,new State(-60));
    AddState(137,new State(-64));
    AddState(138,new State(-192));
    AddState(139,new State(-65));
    AddState(140,new State(-180));
    AddState(141,new State(-182));
    AddState(142,new State(-181));
    AddState(143,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-79,144,-82,145,-9,151,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(144,new State(-183));
    AddState(145,new State(new int[]{6,148,5,345},new int[]{-83,146,-80,147,-81,149}));
    AddState(146,new State(-187));
    AddState(147,new State(-189));
    AddState(148,new State(-185));
    AddState(149,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-79,150,-82,145,-9,151,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(150,new State(-190));
    AddState(151,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,6,-188,5,-188},new int[]{-57,75}));
    AddState(152,new State(-184));
    AddState(153,new State(-61));
    AddState(154,new State(-191));
    AddState(155,new State(-62));
    AddState(156,new State(-193));
    AddState(157,new State(-63));
    AddState(158,new State(-194));
    AddState(159,new State(-46));
    AddState(160,new State(-164));
    AddState(161,new State(-47));
    AddState(162,new State(new int[]{71,164,26,-71,21,-71,7,-71,69,-71,62,-71,63,-71,55,-71,56,-71,58,-71,57,-71,76,-71,59,-71,60,-71,20,-71,28,-71,30,-71,29,-71,31,-71,19,-71,52,-71,51,-71,16,-71,17,-71,18,-71,25,-71,9,-71,47,-71,23,-71,65,-71,67,-71,66,-71,68,-71,13,-71,42,-71,40,-71,44,-71,64,-71,41,-71,3,-71,4,-71,74,-71,49,-71,53,-71,36,-71,50,-71,43,-71,32,-71,70,-71,34,-71,37,-71,39,-71,45,-71,46,-71,2,-71,10,-71,8,-71,27,-71,22,-71,12,-71,48,-71,24,-71,1,-71,6,-71,5,-71},new int[]{-37,163,-40,101}));
    AddState(163,new State(-72));
    AddState(164,new State(new int[]{71,165,36,171},new int[]{-42,166,-73,329}));
    AddState(165,new State(-80));
    AddState(166,new State(new int[]{13,169,71,-198},new int[]{-36,167}));
    AddState(167,new State(new int[]{71,168}));
    AddState(168,new State(-81));
    AddState(169,new State(new int[]{36,171,71,-199,27,-199},new int[]{-73,170}));
    AddState(170,new State(-161));
    AddState(171,new State(new int[]{16,172,13,-163,71,-163,27,-163}));
    AddState(172,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,173,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(173,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,13,-162,71,-162,27,-162},new int[]{-57,75}));
    AddState(174,new State(new int[]{26,175,71,-75,21,-75,7,-75,69,-75,62,-75,63,-75,55,-75,56,-75,58,-75,57,-75,76,-75,59,-75,60,-75,20,-75,28,-75,30,-75,29,-75,31,-75,19,-75,52,-75,51,-75,16,-75,17,-75,18,-75,25,-75,9,-75,47,-75,23,-75,65,-75,67,-75,66,-75,68,-75,13,-75,42,-75,40,-75,44,-75,64,-75,41,-75,3,-75,4,-75,74,-75,49,-75,53,-75,36,-75,50,-75,43,-75,32,-75,70,-75,34,-75,37,-75,39,-75,45,-75,46,-75,2,-75,10,-75,8,-75,27,-75,22,-75,12,-75,48,-75,24,-75,1,-75,6,-75,5,-75}));
    AddState(175,new State(new int[]{27,178,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-11,176,-9,179,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(176,new State(new int[]{27,177,13,25}));
    AddState(177,new State(-73));
    AddState(178,new State(-74));
    AddState(179,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,8,-42,13,-42,27,-42,1,-42,22,-42},new int[]{-57,75}));
    AddState(180,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,181,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(181,new State(new int[]{21,-27,7,-27,69,-27,62,-27,63,-27,55,-27,56,-27,58,-27,57,-27,76,-27,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-27,47,-27,23,-27,9,-27,65,-27,67,-27,66,-27,68,-27,13,-27,42,-27,40,-27,44,-27,64,-27,41,-27,3,-27,4,-27,74,-27,49,-27,53,-27,36,-27,50,-27,26,-27,43,-27,32,-27,70,-27,34,-27,37,-27,39,-27,45,-27,46,-27,2,-27,10,-27,8,-27,27,-27,22,-27,12,-27,48,-27,24,-27,1,-27,6,-27,5,-27,71,-27},new int[]{-57,75}));
    AddState(182,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,183,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(183,new State(new int[]{21,-34,7,-34,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,-34,47,-34,23,-34,9,-34,65,-34,67,-34,66,-34,68,-34,13,-34,42,-34,40,-34,44,-34,64,-34,41,-34,3,-34,4,-34,74,-34,49,-34,53,-34,36,-34,50,-34,26,-34,43,-34,32,-34,70,-34,34,-34,37,-34,39,-34,45,-34,46,-34,2,-34,10,-34,8,-34,27,-34,22,-34,12,-34,48,-34,24,-34,1,-34,6,-34,5,-34,71,-34},new int[]{-57,75}));
    AddState(184,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,185,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(185,new State(new int[]{27,186,21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90},new int[]{-57,75}));
    AddState(186,new State(-41));
    AddState(187,new State(-48));
    AddState(188,new State(-49));
    AddState(189,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,190,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(190,new State(new int[]{9,191,21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90},new int[]{-57,75}));
    AddState(191,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-46,192,-47,344,-11,195,-9,179,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(192,new State(new int[]{10,193,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-47,194,-11,195,-9,179,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(193,new State(-94));
    AddState(194,new State(-96));
    AddState(195,new State(new int[]{13,25,22,343},new int[]{-48,196}));
    AddState(196,new State(new int[]{9,197}));
    AddState(197,new State(new int[]{10,200,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-3,198,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(198,new State(new int[]{10,199}));
    AddState(199,new State(-97));
    AddState(200,new State(-98));
    AddState(201,new State(-50));
    AddState(202,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-43,203,-9,204,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(203,new State(-82));
    AddState(204,new State(new int[]{9,205,21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90},new int[]{-57,75}));
    AddState(205,new State(new int[]{10,341,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-3,206,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(206,new State(new int[]{10,207}));
    AddState(207,new State(new int[]{35,209,33,336,26,-85,21,-85,7,-85,69,-85,62,-85,63,-85,55,-85,56,-85,58,-85,57,-85,76,-85,59,-85,60,-85,20,-85,28,-85,30,-85,29,-85,31,-85,19,-85,52,-85,51,-85,16,-85,17,-85,18,-85,25,-85,9,-85,47,-85,23,-85,65,-85,67,-85,66,-85,68,-85,13,-85,42,-85,40,-85,44,-85,64,-85,41,-85,3,-85,4,-85,74,-85,49,-85,53,-85,36,-85,50,-85,43,-85,32,-85,70,-85,34,-85,37,-85,39,-85,45,-85,46,-85,2,-85,10,-85,8,-85,27,-85,22,-85,12,-85,48,-85,24,-85,1,-85,6,-85,5,-85,71,-85},new int[]{-44,208}));
    AddState(208,new State(-83));
    AddState(209,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-43,210,-9,204,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(210,new State(-86));
    AddState(211,new State(-51));
    AddState(212,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,213,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(213,new State(new int[]{9,214,21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90},new int[]{-57,75}));
    AddState(214,new State(new int[]{10,334,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-3,215,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(215,new State(new int[]{10,216}));
    AddState(216,new State(new int[]{33,218,26,-91,21,-91,7,-91,69,-91,62,-91,63,-91,55,-91,56,-91,58,-91,57,-91,76,-91,59,-91,60,-91,20,-91,28,-91,30,-91,29,-91,31,-91,19,-91,52,-91,51,-91,16,-91,17,-91,18,-91,25,-91,9,-91,47,-91,23,-91,65,-91,67,-91,66,-91,68,-91,13,-91,42,-91,40,-91,44,-91,64,-91,41,-91,3,-91,4,-91,74,-91,49,-91,53,-91,36,-91,50,-91,43,-91,32,-91,70,-91,34,-91,37,-91,39,-91,45,-91,46,-91,2,-91,10,-91,8,-91,27,-91,22,-91,12,-91,48,-91,24,-91,1,-91,6,-91,5,-91,71,-91},new int[]{-45,217}));
    AddState(217,new State(-89));
    AddState(218,new State(new int[]{9,219}));
    AddState(219,new State(new int[]{10,222,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-3,220,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(220,new State(new int[]{10,221}));
    AddState(221,new State(-92));
    AddState(222,new State(-93));
    AddState(223,new State(-52));
    AddState(224,new State(new int[]{41,280,37,281},new int[]{-63,225}));
    AddState(225,new State(new int[]{26,324,9,-216},new int[]{-64,226,-59,323}));
    AddState(226,new State(new int[]{9,227}));
    AddState(227,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311,10,-216},new int[]{-65,228,-3,230,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247,-59,317}));
    AddState(228,new State(new int[]{10,229}));
    AddState(229,new State(-134));
    AddState(230,new State(-137));
    AddState(231,new State(-53));
    AddState(232,new State(new int[]{9,330,41,280,37,281},new int[]{-66,233,-63,279}));
    AddState(233,new State(new int[]{26,324,38,-216,9,-216},new int[]{-64,234,-59,323}));
    AddState(234,new State(new int[]{38,319,9,-216},new int[]{-67,235,-59,318}));
    AddState(235,new State(new int[]{9,236}));
    AddState(236,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311,10,-216},new int[]{-65,237,-3,230,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247,-59,317}));
    AddState(237,new State(new int[]{10,238}));
    AddState(238,new State(-135));
    AddState(239,new State(-54));
    AddState(240,new State(new int[]{41,300,3,141,4,152,44,302,64,135},new int[]{-69,241,-71,296,-72,297,-35,301,-76,140,-77,142,-78,143,-29,303}));
    AddState(241,new State(new int[]{13,312,38,315,9,-216},new int[]{-70,242,-59,314}));
    AddState(242,new State(new int[]{9,243}));
    AddState(243,new State(new int[]{10,246,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-3,244,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(244,new State(new int[]{10,245}));
    AddState(245,new State(-143));
    AddState(246,new State(-144));
    AddState(247,new State(new int[]{37,304,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,39,240},new int[]{-9,248,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(248,new State(new int[]{9,249,21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90},new int[]{-57,75}));
    AddState(249,new State(new int[]{7,111,40,286,44,287,9,123,64,135,41,288,3,141,4,152,74,154,49,156,53,289,36,160,56,180,50,182,26,184,43,290,32,291,70,292,34,293,37,294,39,295,52,262,33,267,35,268,69,270,38,271,51,273,13,-126,10,-126},new int[]{-52,250,-54,282,-55,285,-9,255,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-60,259,-61,82,-62,261}));
    AddState(250,new State(new int[]{42,253,10,-200},new int[]{-53,251}));
    AddState(251,new State(new int[]{10,252}));
    AddState(252,new State(-107));
    AddState(253,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240,10,-201},new int[]{-55,254,-9,255,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(254,new State(-116));
    AddState(255,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,22,277,47,85,23,90},new int[]{-56,256,-57,75}));
    AddState(256,new State(new int[]{41,260,52,262,43,263,37,264,44,265,34,266,33,267,35,268,32,269,69,270,38,271,39,272,51,273,53,274,70,275,40,276,13,-126,42,-126,10,-126},new int[]{-54,257,-60,259,-61,82,-62,261}));
    AddState(257,new State(new int[]{13,80,42,-198,10,-198},new int[]{-36,258}));
    AddState(258,new State(-113));
    AddState(259,new State(-127));
    AddState(260,new State(-129));
    AddState(261,new State(-130));
    AddState(262,new State(-202));
    AddState(263,new State(-203));
    AddState(264,new State(-204));
    AddState(265,new State(-205));
    AddState(266,new State(-206));
    AddState(267,new State(-207));
    AddState(268,new State(-208));
    AddState(269,new State(-209));
    AddState(270,new State(-210));
    AddState(271,new State(-211));
    AddState(272,new State(-212));
    AddState(273,new State(-213));
    AddState(274,new State(-214));
    AddState(275,new State(-215));
    AddState(276,new State(-131));
    AddState(277,new State(-114));
    AddState(278,new State(new int[]{41,280,37,281},new int[]{-66,233,-63,279}));
    AddState(279,new State(-136));
    AddState(280,new State(-155));
    AddState(281,new State(-156));
    AddState(282,new State(new int[]{13,80,10,-198},new int[]{-36,283}));
    AddState(283,new State(new int[]{10,284}));
    AddState(284,new State(-108));
    AddState(285,new State(-115));
    AddState(286,new State(new int[]{26,-196,21,-196,7,-196,69,-196,62,-196,63,-196,55,-196,56,-196,58,-196,57,-196,76,-196,59,-196,60,-196,20,-196,28,-196,30,-196,29,-196,31,-196,19,-196,52,-196,51,-196,16,-196,17,-196,18,-196,25,-196,22,-196,47,-196,23,-196,12,-131,54,-131}));
    AddState(287,new State(new int[]{26,-195,21,-195,7,-195,69,-195,62,-195,63,-195,55,-195,56,-195,58,-195,57,-195,76,-195,59,-195,60,-195,20,-195,28,-195,30,-195,29,-195,31,-195,19,-195,52,-195,51,-195,16,-195,17,-195,18,-195,25,-195,22,-195,47,-195,23,-195,12,-205,54,-205}));
    AddState(288,new State(new int[]{26,-192,21,-192,7,-192,69,-192,62,-192,63,-192,55,-192,56,-192,58,-192,57,-192,76,-192,59,-192,60,-192,20,-192,28,-192,30,-192,29,-192,31,-192,19,-192,52,-192,51,-192,16,-192,17,-192,18,-192,25,-192,22,-192,47,-192,23,-192,12,-129,54,-129}));
    AddState(289,new State(new int[]{26,-194,21,-194,7,-194,69,-194,62,-194,63,-194,55,-194,56,-194,58,-194,57,-194,76,-194,59,-194,60,-194,20,-194,28,-194,30,-194,29,-194,31,-194,19,-194,52,-194,51,-194,16,-194,17,-194,18,-194,25,-194,22,-194,47,-194,23,-194,12,-214,54,-214}));
    AddState(290,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240,12,-203,54,-203},new int[]{-9,190,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(291,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240,12,-209,54,-209},new int[]{-43,203,-9,204,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(292,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240,12,-215,54,-215},new int[]{-9,213,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(293,new State(new int[]{41,280,37,281,12,-206,54,-206},new int[]{-63,225}));
    AddState(294,new State(new int[]{41,280,37,281,12,-204,54,-204},new int[]{-66,233,-63,279}));
    AddState(295,new State(new int[]{41,300,3,141,4,152,44,302,64,135,12,-212,54,-212},new int[]{-69,241,-71,296,-72,297,-35,301,-76,140,-77,142,-78,143,-29,303}));
    AddState(296,new State(-145));
    AddState(297,new State(new int[]{21,298,13,-147,38,-147,9,-147}));
    AddState(298,new State(new int[]{41,299}));
    AddState(299,new State(-152));
    AddState(300,new State(-151));
    AddState(301,new State(-148));
    AddState(302,new State(-149));
    AddState(303,new State(-150));
    AddState(304,new State(new int[]{9,305,41,280,37,281},new int[]{-66,233,-63,279}));
    AddState(305,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-52,306,-55,285,-9,255,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(306,new State(new int[]{42,253,10,-200},new int[]{-53,307}));
    AddState(307,new State(new int[]{10,308}));
    AddState(308,new State(-111));
    AddState(309,new State(new int[]{45,310,37,-117,7,-117,40,-117,44,-117,9,-117,64,-117,41,-117,3,-117,4,-117,74,-117,49,-117,53,-117,36,-117,56,-117,50,-117,26,-117,43,-117,32,-117,70,-117,34,-117,39,-117}));
    AddState(310,new State(-118));
    AddState(311,new State(-119));
    AddState(312,new State(new int[]{41,300,3,141,4,152,44,302,64,135},new int[]{-71,313,-72,297,-35,301,-76,140,-77,142,-78,143,-29,303}));
    AddState(313,new State(-146));
    AddState(314,new State(-153));
    AddState(315,new State(new int[]{41,300,3,141,4,152,44,302,64,135},new int[]{-71,316,-72,297,-35,301,-76,140,-77,142,-78,143,-29,303}));
    AddState(316,new State(-154));
    AddState(317,new State(-138));
    AddState(318,new State(-139));
    AddState(319,new State(new int[]{41,280,37,281,44,322},new int[]{-68,320,-63,321}));
    AddState(320,new State(-140));
    AddState(321,new State(-141));
    AddState(322,new State(-142));
    AddState(323,new State(-157));
    AddState(324,new State(new int[]{27,325,36,171},new int[]{-42,326,-73,329}));
    AddState(325,new State(-158));
    AddState(326,new State(new int[]{13,169,27,-198},new int[]{-36,327}));
    AddState(327,new State(new int[]{27,328}));
    AddState(328,new State(-159));
    AddState(329,new State(-160));
    AddState(330,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-52,331,-55,285,-9,255,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(331,new State(new int[]{42,253,10,-200},new int[]{-53,332}));
    AddState(332,new State(new int[]{10,333}));
    AddState(333,new State(-112));
    AddState(334,new State(new int[]{33,218,26,-91,21,-91,7,-91,69,-91,62,-91,63,-91,55,-91,56,-91,58,-91,57,-91,76,-91,59,-91,60,-91,20,-91,28,-91,30,-91,29,-91,31,-91,19,-91,52,-91,51,-91,16,-91,17,-91,18,-91,25,-91,9,-91,47,-91,23,-91,65,-91,67,-91,66,-91,68,-91,13,-91,42,-91,40,-91,44,-91,64,-91,41,-91,3,-91,4,-91,74,-91,49,-91,53,-91,36,-91,50,-91,43,-91,32,-91,70,-91,34,-91,37,-91,39,-91,45,-91,46,-91,2,-91,10,-91,8,-91,27,-91,22,-91,12,-91,48,-91,24,-91,1,-91,6,-91,5,-91,71,-91},new int[]{-45,335}));
    AddState(335,new State(-90));
    AddState(336,new State(new int[]{9,337}));
    AddState(337,new State(new int[]{10,340,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,232,39,240,45,309,46,311},new int[]{-3,338,-4,4,-5,107,-6,108,-7,9,-8,18,-9,19,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-51,247}));
    AddState(338,new State(new int[]{10,339}));
    AddState(339,new State(-87));
    AddState(340,new State(-88));
    AddState(341,new State(new int[]{35,209,33,336,26,-85,21,-85,7,-85,69,-85,62,-85,63,-85,55,-85,56,-85,58,-85,57,-85,76,-85,59,-85,60,-85,20,-85,28,-85,30,-85,29,-85,31,-85,19,-85,52,-85,51,-85,16,-85,17,-85,18,-85,25,-85,9,-85,47,-85,23,-85,65,-85,67,-85,66,-85,68,-85,13,-85,42,-85,40,-85,44,-85,64,-85,41,-85,3,-85,4,-85,74,-85,49,-85,53,-85,36,-85,50,-85,43,-85,32,-85,70,-85,34,-85,37,-85,39,-85,45,-85,46,-85,2,-85,10,-85,8,-85,27,-85,22,-85,12,-85,48,-85,24,-85,1,-85,6,-85,5,-85,71,-85},new int[]{-44,342}));
    AddState(342,new State(-84));
    AddState(343,new State(-99));
    AddState(344,new State(-95));
    AddState(345,new State(-186));
    AddState(346,new State(-175));
    AddState(347,new State(-177));
    AddState(348,new State(-169));
    AddState(349,new State(-170));
    AddState(350,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240,27,-199},new int[]{-9,26,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(351,new State(-67,new int[]{-37,352,-40,101}));
    AddState(352,new State(-69));
    AddState(353,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,354,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(354,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,13,-133,10,-133,42,-133},new int[]{-57,75}));
    AddState(355,new State(-105));
    AddState(356,new State(new int[]{10,346,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-74,124,-50,357,-75,347,-9,362,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-49,365}));
    AddState(357,new State(new int[]{13,360,10,-198},new int[]{-36,358}));
    AddState(358,new State(new int[]{10,359}));
    AddState(359,new State(-101));
    AddState(360,new State(new int[]{7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240,10,-199},new int[]{-49,361,-9,72,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(361,new State(-103));
    AddState(362,new State(new int[]{12,363,21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90},new int[]{-57,75}));
    AddState(363,new State(new int[]{1,355,7,111,40,119,44,121,9,123,64,135,41,138,3,141,4,152,74,154,49,156,53,158,36,160,56,180,50,182,26,184,43,189,32,202,70,212,34,224,37,278,39,240},new int[]{-9,364,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239}));
    AddState(364,new State(new int[]{21,20,7,22,69,27,62,29,63,31,55,33,56,35,58,37,57,39,76,41,59,43,60,45,20,47,28,49,30,51,29,53,31,55,19,57,52,59,51,61,16,63,17,65,18,67,25,69,47,85,23,90,10,-104,1,-179,13,-104},new int[]{-57,75}));
    AddState(365,new State(-102));
    AddState(366,new State(new int[]{7,111,40,286,44,287,9,123,64,135,41,288,3,141,4,152,74,154,49,156,53,289,36,160,56,180,50,182,26,184,43,290,32,291,70,292,34,293,37,294,39,295,52,262,33,267,35,268,69,270,38,271,51,273,13,-126,10,-126},new int[]{-52,367,-54,370,-55,285,-9,255,-10,93,-13,94,-14,95,-15,109,-25,110,-26,118,-27,120,-28,122,-29,134,-30,136,-34,137,-35,139,-76,140,-77,142,-78,143,-31,153,-32,155,-33,157,-16,159,-17,161,-38,162,-39,174,-18,187,-19,188,-20,201,-21,211,-22,223,-23,231,-24,239,-60,259,-61,82,-62,261}));
    AddState(367,new State(new int[]{42,253,10,-200},new int[]{-53,368}));
    AddState(368,new State(new int[]{10,369}));
    AddState(369,new State(-109));
    AddState(370,new State(new int[]{13,80,10,-198},new int[]{-36,371}));
    AddState(371,new State(new int[]{10,372}));
    AddState(372,new State(-110));
    AddState(373,new State(new int[]{13,7,42,-6,7,-6,40,-6,44,-6,9,-6,64,-6,41,-6,3,-6,4,-6,74,-6,49,-6,53,-6,36,-6,56,-6,50,-6,26,-6,43,-6,32,-6,70,-6,34,-6,37,-6,39,-6,45,-6,46,-6,2,-6,10,-6}));

    rules=new Rule[217];
    rules[1]=new Rule(-2, new int[]{-1,2});
    rules[2]=new Rule(-1, new int[]{-3});
    rules[3]=new Rule(-3, new int[]{-4});
    rules[4]=new Rule(-4, new int[]{-5});
    rules[5]=new Rule(-4, new int[]{-4,42,-5});
    rules[6]=new Rule(-4, new int[]{-4,-5});
    rules[7]=new Rule(-5, new int[]{-6});
    rules[8]=new Rule(-5, new int[]{-5,13,-6});
    rules[9]=new Rule(-6, new int[]{-7});
    rules[10]=new Rule(-7, new int[]{-8});
    rules[11]=new Rule(-7, new int[]{-7,65,-7});
    rules[12]=new Rule(-7, new int[]{-7,67,-7});
    rules[13]=new Rule(-7, new int[]{-7,66,-7});
    rules[14]=new Rule(-7, new int[]{-7,68,-7});
    rules[15]=new Rule(-9, new int[]{-10});
    rules[16]=new Rule(-9, new int[]{-9,7,-11,8});
    rules[17]=new Rule(-9, new int[]{-9,69,-9});
    rules[18]=new Rule(-9, new int[]{-9,62,-9});
    rules[19]=new Rule(-9, new int[]{-9,63,-9});
    rules[20]=new Rule(-9, new int[]{-9,55,-9});
    rules[21]=new Rule(-9, new int[]{-9,56,-9});
    rules[22]=new Rule(-9, new int[]{-9,58,-9});
    rules[23]=new Rule(-9, new int[]{-9,57,-9});
    rules[24]=new Rule(-9, new int[]{-9,76,-9});
    rules[25]=new Rule(-9, new int[]{-9,59,-9});
    rules[26]=new Rule(-9, new int[]{-9,60,-9});
    rules[27]=new Rule(-9, new int[]{56,-9});
    rules[28]=new Rule(-9, new int[]{-9,20,-9});
    rules[29]=new Rule(-9, new int[]{-9,28,-9});
    rules[30]=new Rule(-9, new int[]{-9,30,-9});
    rules[31]=new Rule(-9, new int[]{-9,29,-9});
    rules[32]=new Rule(-9, new int[]{-9,31,-9});
    rules[33]=new Rule(-9, new int[]{-9,19,-9});
    rules[34]=new Rule(-9, new int[]{50,-9});
    rules[35]=new Rule(-9, new int[]{-9,52,-9});
    rules[36]=new Rule(-9, new int[]{-9,51,-9});
    rules[37]=new Rule(-9, new int[]{-9,16,-9});
    rules[38]=new Rule(-9, new int[]{-9,17,-9});
    rules[39]=new Rule(-9, new int[]{-9,18,-9});
    rules[40]=new Rule(-9, new int[]{-9,25,-12});
    rules[41]=new Rule(-9, new int[]{26,-9,27});
    rules[42]=new Rule(-11, new int[]{-9});
    rules[43]=new Rule(-11, new int[]{-11,13,-9});
    rules[44]=new Rule(-10, new int[]{-13});
    rules[45]=new Rule(-14, new int[]{-15});
    rules[46]=new Rule(-14, new int[]{-16});
    rules[47]=new Rule(-14, new int[]{-17});
    rules[48]=new Rule(-14, new int[]{-18});
    rules[49]=new Rule(-14, new int[]{-19});
    rules[50]=new Rule(-14, new int[]{-20});
    rules[51]=new Rule(-14, new int[]{-21});
    rules[52]=new Rule(-14, new int[]{-22});
    rules[53]=new Rule(-14, new int[]{-23});
    rules[54]=new Rule(-14, new int[]{-24});
    rules[55]=new Rule(-15, new int[]{-25});
    rules[56]=new Rule(-15, new int[]{-26});
    rules[57]=new Rule(-15, new int[]{-27});
    rules[58]=new Rule(-15, new int[]{-28});
    rules[59]=new Rule(-15, new int[]{-29});
    rules[60]=new Rule(-15, new int[]{-30});
    rules[61]=new Rule(-15, new int[]{-31});
    rules[62]=new Rule(-15, new int[]{-32});
    rules[63]=new Rule(-15, new int[]{-33});
    rules[64]=new Rule(-30, new int[]{-34});
    rules[65]=new Rule(-30, new int[]{-35});
    rules[66]=new Rule(-13, new int[]{-14,26,-11,-36,27});
    rules[67]=new Rule(-13, new int[]{-14,26,27});
    rules[68]=new Rule(-13, new int[]{-14,26,-11,-36,27,-37});
    rules[69]=new Rule(-13, new int[]{-14,26,27,-37});
    rules[70]=new Rule(-13, new int[]{-14});
    rules[71]=new Rule(-17, new int[]{-38});
    rules[72]=new Rule(-17, new int[]{-38,-37});
    rules[73]=new Rule(-38, new int[]{-39,26,-11,27});
    rules[74]=new Rule(-38, new int[]{-39,26,27});
    rules[75]=new Rule(-38, new int[]{-39});
    rules[76]=new Rule(-39, new int[]{-9,21,41});
    rules[77]=new Rule(-37, new int[]{-40,-41});
    rules[78]=new Rule(-41, new int[]{9,-3,10});
    rules[79]=new Rule(-41, new int[]{9,10});
    rules[80]=new Rule(-40, new int[]{71,71});
    rules[81]=new Rule(-40, new int[]{71,-42,-36,71});
    rules[82]=new Rule(-20, new int[]{32,-43});
    rules[83]=new Rule(-43, new int[]{-9,9,-3,10,-44});
    rules[84]=new Rule(-43, new int[]{-9,9,10,-44});
    rules[85]=new Rule(-44, new int[]{});
    rules[86]=new Rule(-44, new int[]{35,-43});
    rules[87]=new Rule(-44, new int[]{33,9,-3,10});
    rules[88]=new Rule(-44, new int[]{33,9,10});
    rules[89]=new Rule(-21, new int[]{70,-9,9,-3,10,-45});
    rules[90]=new Rule(-21, new int[]{70,-9,9,10,-45});
    rules[91]=new Rule(-45, new int[]{});
    rules[92]=new Rule(-45, new int[]{33,9,-3,10});
    rules[93]=new Rule(-45, new int[]{33,9,10});
    rules[94]=new Rule(-19, new int[]{43,-9,9,-46,10});
    rules[95]=new Rule(-46, new int[]{-47});
    rules[96]=new Rule(-46, new int[]{-46,-47});
    rules[97]=new Rule(-47, new int[]{-11,-48,9,-3,10});
    rules[98]=new Rule(-47, new int[]{-11,-48,9,10});
    rules[99]=new Rule(-48, new int[]{22});
    rules[100]=new Rule(-12, new int[]{-49});
    rules[101]=new Rule(-12, new int[]{9,-50,-36,10});
    rules[102]=new Rule(-50, new int[]{-49});
    rules[103]=new Rule(-50, new int[]{-50,13,-49});
    rules[104]=new Rule(-49, new int[]{-9,12,-9});
    rules[105]=new Rule(-49, new int[]{-9,12,1});
    rules[106]=new Rule(-8, new int[]{-9});
    rules[107]=new Rule(-8, new int[]{-51,-9,9,-52,-53,10});
    rules[108]=new Rule(-8, new int[]{-51,-9,9,-54,-36,10});
    rules[109]=new Rule(-8, new int[]{-9,9,-52,-53,10});
    rules[110]=new Rule(-8, new int[]{-9,9,-54,-36,10});
    rules[111]=new Rule(-8, new int[]{-51,37,9,-52,-53,10});
    rules[112]=new Rule(-8, new int[]{37,9,-52,-53,10});
    rules[113]=new Rule(-55, new int[]{-9,-56,-54,-36});
    rules[114]=new Rule(-56, new int[]{22});
    rules[115]=new Rule(-52, new int[]{-55});
    rules[116]=new Rule(-52, new int[]{-52,42,-55});
    rules[117]=new Rule(-51, new int[]{45});
    rules[118]=new Rule(-51, new int[]{45,45});
    rules[119]=new Rule(-51, new int[]{46});
    rules[120]=new Rule(-18, new int[]{-9,-57,9,-54,-36,10});
    rules[121]=new Rule(-18, new int[]{-9,-57});
    rules[122]=new Rule(-57, new int[]{47,-58,48});
    rules[123]=new Rule(-57, new int[]{23,-58,24});
    rules[124]=new Rule(-58, new int[]{-59});
    rules[125]=new Rule(-58, new int[]{-9});
    rules[126]=new Rule(-54, new int[]{});
    rules[127]=new Rule(-54, new int[]{-60});
    rules[128]=new Rule(-54, new int[]{-54,13,-60});
    rules[129]=new Rule(-61, new int[]{41});
    rules[130]=new Rule(-61, new int[]{-62});
    rules[131]=new Rule(-61, new int[]{40});
    rules[132]=new Rule(-60, new int[]{-61,12,-9});
    rules[133]=new Rule(-60, new int[]{-61,54,-9});
    rules[134]=new Rule(-22, new int[]{34,-63,-64,9,-65,10});
    rules[135]=new Rule(-23, new int[]{37,-66,-64,-67,9,-65,10});
    rules[136]=new Rule(-66, new int[]{-63});
    rules[137]=new Rule(-65, new int[]{-3});
    rules[138]=new Rule(-65, new int[]{-59});
    rules[139]=new Rule(-67, new int[]{-59});
    rules[140]=new Rule(-67, new int[]{38,-68});
    rules[141]=new Rule(-68, new int[]{-63});
    rules[142]=new Rule(-68, new int[]{44});
    rules[143]=new Rule(-24, new int[]{39,-69,-70,9,-3,10});
    rules[144]=new Rule(-24, new int[]{39,-69,-70,9,10});
    rules[145]=new Rule(-69, new int[]{-71});
    rules[146]=new Rule(-69, new int[]{-69,13,-71});
    rules[147]=new Rule(-71, new int[]{-72});
    rules[148]=new Rule(-71, new int[]{-35});
    rules[149]=new Rule(-71, new int[]{44});
    rules[150]=new Rule(-71, new int[]{-29});
    rules[151]=new Rule(-72, new int[]{41});
    rules[152]=new Rule(-72, new int[]{-72,21,41});
    rules[153]=new Rule(-70, new int[]{-59});
    rules[154]=new Rule(-70, new int[]{38,-71});
    rules[155]=new Rule(-63, new int[]{41});
    rules[156]=new Rule(-63, new int[]{37});
    rules[157]=new Rule(-64, new int[]{-59});
    rules[158]=new Rule(-64, new int[]{26,27});
    rules[159]=new Rule(-64, new int[]{26,-42,-36,27});
    rules[160]=new Rule(-42, new int[]{-73});
    rules[161]=new Rule(-42, new int[]{-42,13,-73});
    rules[162]=new Rule(-73, new int[]{36,16,-9});
    rules[163]=new Rule(-73, new int[]{36});
    rules[164]=new Rule(-16, new int[]{36});
    rules[165]=new Rule(-25, new int[]{7,-11,8});
    rules[166]=new Rule(-25, new int[]{7,-11,1});
    rules[167]=new Rule(-25, new int[]{7,-11,13,8});
    rules[168]=new Rule(-25, new int[]{7,-11,13,1});
    rules[169]=new Rule(-25, new int[]{7,8});
    rules[170]=new Rule(-25, new int[]{7,1});
    rules[171]=new Rule(-28, new int[]{9,-74,10});
    rules[172]=new Rule(-28, new int[]{9,-74,1});
    rules[173]=new Rule(-28, new int[]{9,-74,13,10});
    rules[174]=new Rule(-28, new int[]{9,-74,13,1});
    rules[175]=new Rule(-28, new int[]{9,10});
    rules[176]=new Rule(-28, new int[]{9,10});
    rules[177]=new Rule(-74, new int[]{-75});
    rules[178]=new Rule(-74, new int[]{-74,13,-75});
    rules[179]=new Rule(-75, new int[]{-9,12,-9});
    rules[180]=new Rule(-35, new int[]{-76});
    rules[181]=new Rule(-35, new int[]{-77});
    rules[182]=new Rule(-76, new int[]{3});
    rules[183]=new Rule(-77, new int[]{-78,-79});
    rules[184]=new Rule(-78, new int[]{4});
    rules[185]=new Rule(-80, new int[]{6});
    rules[186]=new Rule(-81, new int[]{5});
    rules[187]=new Rule(-79, new int[]{-82,-83});
    rules[188]=new Rule(-82, new int[]{-9});
    rules[189]=new Rule(-83, new int[]{-80});
    rules[190]=new Rule(-83, new int[]{-81,-79});
    rules[191]=new Rule(-31, new int[]{74});
    rules[192]=new Rule(-34, new int[]{41});
    rules[193]=new Rule(-32, new int[]{49});
    rules[194]=new Rule(-33, new int[]{53});
    rules[195]=new Rule(-27, new int[]{44});
    rules[196]=new Rule(-26, new int[]{40});
    rules[197]=new Rule(-29, new int[]{64});
    rules[198]=new Rule(-36, new int[]{});
    rules[199]=new Rule(-36, new int[]{13});
    rules[200]=new Rule(-53, new int[]{});
    rules[201]=new Rule(-53, new int[]{42});
    rules[202]=new Rule(-62, new int[]{52});
    rules[203]=new Rule(-62, new int[]{43});
    rules[204]=new Rule(-62, new int[]{37});
    rules[205]=new Rule(-62, new int[]{44});
    rules[206]=new Rule(-62, new int[]{34});
    rules[207]=new Rule(-62, new int[]{33});
    rules[208]=new Rule(-62, new int[]{35});
    rules[209]=new Rule(-62, new int[]{32});
    rules[210]=new Rule(-62, new int[]{69});
    rules[211]=new Rule(-62, new int[]{38});
    rules[212]=new Rule(-62, new int[]{39});
    rules[213]=new Rule(-62, new int[]{51});
    rules[214]=new Rule(-62, new int[]{53});
    rules[215]=new Rule(-62, new int[]{70});
    rules[216]=new Rule(-59, new int[]{});

    nonTerminals = new string[] {"", "program", "$accept", "statements", 
      "syntactic_statements", "syntactic_statement", "any_expression", "relationship_expression", 
      "resource_expression", "expression", "higher_precedence", "expressions", 
      "selector_entries", "call_function_expression", "primary_expression", "literal_expression", 
      "variable", "call_method_with_lambda_expression", "collection_expression", 
      "case_expression", "if_expression", "unless_expression", "definition_expression", 
      "hostclass_expression", "node_definition_expression", "array", "boolean", 
      "default", "hash", "regex", "text_or_name", "number", "type", "undef", 
      "name", "quotedtext", "endcomma", "lambda", "call_method_expression", "named_access", 
      "lambda_parameter_list", "lambda_rest", "parameters", "if_part", "else", 
      "unless_else", "case_options", "case_option", "case_colon", "selector_entry", 
      "selector_entry_list", "at", "resourceinstances", "endsemi", "attribute_operations", 
      "resourceinst", "title_colon", "collect_query", "optional_query", "nil", 
      "attribute_operation", "attribute_name", "keyword", "classname", "parameter_list", 
      "opt_statements", "stacked_classname", "classparent", "classnameordefault", 
      "hostnames", "nodeparent", "hostname", "dotted_name", "parameter", "hashpairs", 
      "hashpair", "string", "dq_string", "dqpre", "dqrval", "dqpost", "dqmid", 
      "text_expression", "dqtail", };
  }

  protected override void DoAction(int action)
  {
    switch (action)
    {
      case 16: // expression -> expression LBRACK expressions RBRACK 
#line 133 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]); }
        break;
      case 41: // expression -> LPAREN expression RPAREN 
#line 158 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]); }
        break;
      case 66: // call_function_expression -> primary_expression LPAREN expressions endcomma RPAREN 
#line 211 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 67: // call_function_expression -> primary_expression LPAREN RPAREN 
#line 212 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 68: // call_function_expression -> primary_expression LPAREN expressions endcomma RPAREN lambda 
#line 213 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-2]);}
        break;
      case 69: // call_function_expression -> primary_expression LPAREN RPAREN lambda 
#line 214 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-2]);}
        break;
      case 73: // call_method_expression -> named_access LPAREN expressions RPAREN 
#line 226 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 74: // call_method_expression -> named_access LPAREN RPAREN 
#line 227 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 78: // lambda_rest -> LBRACE statements RBRACE 
#line 249 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 79: // lambda_rest -> LBRACE RBRACE 
#line 250 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 83: // if_part -> expression LBRACE statements RBRACE else 
#line 271 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-2]);}
        break;
      case 84: // if_part -> expression LBRACE RBRACE else 
#line 272 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-2]);}
        break;
      case 87: // else -> ELSE LBRACE statements RBRACE 
#line 278 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 88: // else -> ELSE LBRACE RBRACE 
#line 279 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 89: // unless_expression -> UNLESS expression LBRACE statements RBRACE unless_else 
#line 287 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-2]);}
        break;
      case 90: // unless_expression -> UNLESS expression LBRACE RBRACE unless_else 
#line 288 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-2]);}
        break;
      case 92: // unless_else -> ELSE LBRACE statements RBRACE 
#line 296 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 93: // unless_else -> ELSE LBRACE RBRACE 
#line 297 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 94: // case_expression -> CASE expression LBRACE case_options RBRACE 
#line 305 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]); }
        break;
      case 97: // case_option -> expressions case_colon LBRACE statements RBRACE 
#line 317 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 98: // case_option -> expressions case_colon LBRACE RBRACE 
#line 318 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 101: // selector_entries -> LBRACE selector_entry_list endcomma RBRACE 
#line 332 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 105: // selector_entry -> expression FARROW error 
#line 347 "Generated\parser.y"
			{ CallHdlr("selector_entry: expression expected", location_stack.array[location_stack.top-1]); }
        break;
      case 107: // resource_expression -> at expression LBRACE resourceinstances endsemi RBRACE 
#line 360 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 108: // resource_expression -> at expression LBRACE attribute_operations endcomma RBRACE 
#line 361 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 109: // resource_expression -> expression LBRACE resourceinstances endsemi RBRACE 
#line 362 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 110: // resource_expression -> expression LBRACE attribute_operations endcomma RBRACE 
#line 363 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 111: // resource_expression -> at CLASS LBRACE resourceinstances endsemi RBRACE 
#line 364 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 112: // resource_expression -> CLASS LBRACE resourceinstances endsemi RBRACE 
#line 365 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 120: // collection_expression -> expression collect_query LBRACE attribute_operations endcomma RBRACE 
#line 399 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 122: // collect_query -> LCOLLECT optional_query RCOLLECT 
#line 404 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 123: // collect_query -> LLCOLLECT optional_query RRCOLLECT 
#line 405 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 134: // definition_expression -> DEFINE classname parameter_list LBRACE opt_statements RBRACE 
#line 446 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 135: // hostclass_expression -> CLASS stacked_classname parameter_list classparent LBRACE opt_statements RBRACE 
#line 454 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]); dbgout("hostclass_expression: {0}'", value_stack.array[value_stack.top-6].str);}
        break;
      case 143: // node_definition_expression -> NODE hostnames nodeparent LBRACE statements RBRACE 
#line 489 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 144: // node_definition_expression -> NODE hostnames nodeparent LBRACE RBRACE 
#line 490 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 156: // classname -> CLASS 
#line 528 "Generated\parser.y"
			{ CallHdlr("Bad class name", location_stack.array[location_stack.top-1]); }
        break;
      case 165: // array -> LBRACK expressions RBRACK 
#line 569 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 166: // array -> LBRACK expressions error 
#line 570 "Generated\parser.y"
			{ CallHdlr("unmatched bracket", location_stack.array[location_stack.top-1]); }
        break;
      case 167: // array -> LBRACK expressions COMMA RBRACK 
#line 571 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 168: // array -> LBRACK expressions COMMA error 
#line 572 "Generated\parser.y"
			{ CallHdlr("unmatched bracket", location_stack.array[location_stack.top-1]); }
        break;
      case 169: // array -> LBRACK RBRACK 
#line 573 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 170: // array -> LBRACK error 
#line 574 "Generated\parser.y"
			{ CallHdlr("unmatched bracket", location_stack.array[location_stack.top-1]); }
        break;
      case 171: // hash -> LBRACE hashpairs RBRACE 
#line 578 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-3], location_stack.array[location_stack.top-1]);}
        break;
      case 172: // hash -> LBRACE hashpairs error 
#line 579 "Generated\parser.y"
			{ CallHdlr("unmatched brace", location_stack.array[location_stack.top-1]);}
        break;
      case 173: // hash -> LBRACE hashpairs COMMA RBRACE 
#line 580 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-4], location_stack.array[location_stack.top-1]);}
        break;
      case 174: // hash -> LBRACE hashpairs COMMA error 
#line 581 "Generated\parser.y"
			{ CallHdlr("unmatched brace", location_stack.array[location_stack.top-1]);}
        break;
      case 175: // hash -> LBRACE RBRACE 
#line 582 "Generated\parser.y"
			{ Match(location_stack.array[location_stack.top-2], location_stack.array[location_stack.top-1]);}
        break;
      case 176: // hash -> LBRACE RBRACE 
#line 583 "Generated\parser.y"
			{ CallHdlr("unmatched brace", location_stack.array[location_stack.top-1]);}
        break;
    }
  }

  protected override string TerminalToString(int terminal)
  {
    if (((Tokens)terminal).ToString() != terminal.ToString())
      return ((Tokens)terminal).ToString();
    else
      return CharToString((char)terminal);
  }

#line 682 "Generated\parser.y"




}
}
